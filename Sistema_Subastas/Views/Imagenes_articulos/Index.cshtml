@* @model IEnumerable<imagenes_articulos>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var articulos = ViewBag.Articulos as List<articulos>;
    var categorias = ViewBag.Categorias as List<categorias>;
    var ca_img = ViewBag.ArticuloCategorias as List<articulo_categoria>;
    var imagenes = Model.ToList();


}

<head>
    <link href="~/css/index_articulos_imagenes.css" rel="stylesheet" />
</head>

<div class="row g-0">
    <div class="mb-4">
        <input type="text" id="searchNombre" placeholder="Buscar por nombre..." class="border p-2 mr-2">
        <input type="number" id="searchPrecioMin" placeholder="Precio mínimo" class="border p-2 mr-2" min="0" step="any">
        <input type="number" id="searchPrecioMax" placeholder="Precio máximo" class="border p-2 mr-2" min="0" step="any">
        <select id="searchCategoria" class="border p-2 mr-2">
            <option value="">Todas las categorías</option>
            @foreach (var categoria in categorias)
            {
                <option value="@categoria.Id">@categoria.nombre</option>
            }
        </select>
        <select id="searchEstado" class="border p-2 mr-2">
            <option value="">Todos los estados</option>
            <option value="Nuevo">Nuevo</option>
            <option value="Usado">Usado</option>
        </select>
        <select id="searchPrecios" class="border p-2 mr-2">
            <option value="">Ordenar por precio</option>
            <option value="Bajo">Más bajo</option>
            <option value="Alto">Más alto</option>
        </select>
    </div>

    @if (TempData["MensajeDisputa"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["MensajeDisputa"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="contenedor-grid">
        @foreach (var articulo in articulos.Where(a => a.estado_subasta == "Publicado"))
        {
            var imagenesArticulo = imagenes.Where(img => img.articulo_id == articulo.Id).ToList();

            

            var carouselId = $"carouselArticulo_{articulo.Id}";

            var articuloCategoria = ca_img.FirstOrDefault(ac => ac.articulo_id == articulo.Id);
            if (articuloCategoria == null) continue;

            var categoria = categorias.FirstOrDefault(c => c.Id == articuloCategoria.categoria_id);

            <div>
                <div class="card text-decoration-none">
                    <div id="@carouselId" class="carousel slide imgen_p" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @for (int i = 0; i < imagenesArticulo.Count; i++)
                            {
                                var imag = imagenesArticulo[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@imag.url_imagen"
                                         alt="Imagen del artículo"
                                         onerror="this.onerror=null; this.src='https://res.cloudinary.com/daxbwcgw2/upload/Subasta/default-art.jpg'" />
                                </div>
                            }
                        </div>
                        @if (imagenesArticulo.Count > 1)
                        {
                            <button class="carousel-control-prev custom-carousel-btn" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                                <span class="custom-arrow bg-black" aria-hidden="true">&#10094;</span>
                            </button>
                            <button class="carousel-control-next custom-carousel-btn" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                                <span class="custom-arrow bg-black" aria-hidden="true">&#10095;</span>
                            </button>
                        }
                    </div>

                    <a href="@Url.Action("Details", "Imagenes_articulos", new { id = articulo.Id })">
                        <div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800 item-articulo"
                             data-estado="@articulo.estado"
                             data-nombre="@articulo.titulo"
                             data-categoria="@categoria?.Id"
                             data-precio="@articulo.precio_salida">
                            <div class="pt-6">
                                <ul class="mt-2 items-center gap-4">
                                    <li><h1 class="text-sm font-medium">@articulo.titulo</h1></li>
                                    <li><p class="text-sm text-gray-500">Categoría: @categoria?.nombre</p></li>
                                    <li><p>Fecha de registro: @articulo.fecha_registro</p></li>
                                    <li><p class="text-sm text-gray-500">@ViewBag.Fecha</p></li>
                                    <li>
                                        <div class="d-flex">
                                            <p class="leading-tight text-precio">Precio de salida: </p>
                                            <p class="font-extrabold leading-tight">$ @articulo.precio_salida</p>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('searchNombre').addEventListener('input', filtrarArticulos);
        document.getElementById('searchCategoria').addEventListener('change', filtrarArticulos);
        document.getElementById('searchEstado').addEventListener('change', filtrarArticulos);
        document.getElementById('searchPrecioMin').addEventListener('input', filtrarArticulos);
        document.getElementById('searchPrecioMax').addEventListener('input', filtrarArticulos);
        document.getElementById('searchPrecios').addEventListener('change', filtrarArticulos);

        function filtrarArticulos() {
            const nombre = document.getElementById('searchNombre').value.toLowerCase();
            const categoria = document.getElementById('searchCategoria').value.toLowerCase();
            const estado = document.getElementById('searchEstado').value.toLowerCase();
            const precioMin = document.getElementById('searchPrecioMin').value !== "" ? parseFloat(document.getElementById('searchPrecioMin').value) : 0;
            const precioMax = document.getElementById('searchPrecioMax').value !== "" ? parseFloat(document.getElementById('searchPrecioMax').value) : Number.MAX_VALUE;
            const ordenPrecios = document.getElementById('searchPrecios').value.toLowerCase();

            const contenedor = document.querySelector('.contenedor-grid');
            const articulos = Array.from(contenedor.children);

            const coincidentes = [];
            const noCoincidentes = [];

            articulos.forEach(wrapper => {
                const articulo = wrapper.querySelector('.item-articulo');
                const articuloNombre = articulo.getAttribute('data-nombre').toLowerCase();
                const articuloCategoria = articulo.getAttribute('data-categoria').toLowerCase();
                const articuloEstado = articulo.getAttribute('data-estado').toLowerCase();
                const precioSalida = parseFloat(articulo.getAttribute('data-precio')) || 0;

                const matchNombre = nombre === '' || articuloNombre.includes(nombre);
                const matchCategoria = categoria === '' || articuloCategoria === categoria;
                const matchEstado = estado === '' || articuloEstado === estado;
                const matchPrecio = precioSalida >= precioMin && precioSalida <= precioMax;

                if (matchNombre && matchCategoria && matchEstado && matchPrecio) {
                    wrapper.style.display = 'block';
                    coincidentes.push({ wrapper, precio: precioSalida });
                } else {
                    wrapper.style.display = 'none';
                    noCoincidentes.push(wrapper);
                }
            });

            if (ordenPrecios === 'bajo') {
                coincidentes.sort((a, b) => a.precio - b.precio);
            } else if (ordenPrecios === 'alto') {
                coincidentes.sort((a, b) => b.precio - a.precio);
            }

            contenedor.innerHTML = '';
            coincidentes.forEach(el => contenedor.appendChild(el.wrapper));
            noCoincidentes.forEach(el => contenedor.appendChild(el));
        }
    </script>
}



 *@

 @model IEnumerable<imagenes_articulos>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var articulos = ViewBag.Articulos as List<articulos>;
    var categorias = ViewBag.Categorias as List<categorias>;
    var ca_img = ViewBag.ArticuloCategorias as List<articulo_categoria>;
    var imagenes_articulos = Model as List<imagenes_articulos>;


    
    

} 
<head>
    <link href="~/css/index_articulos_imagenes.css" rel="stylesheet" />
</head>
<div class="row g-0">
    <div class="mb-4">
        <input type="text" id="searchNombre" placeholder="Buscar por nombre..." class="border p-2 mr-2">
        <input type="number" id="searchPrecioMin" placeholder="Precio mínimo" class="border p-2 mr-2" min="0" step="any">
        <input type="number" id="searchPrecioMax" placeholder="Precio máximo" class="border p-2" min="0" step="any">
        <select id="searchCategoria" class="border p-2 mr-2">
            <option value="">Todas las categorías</option>
            @foreach (var categoria in categorias)
            {
                <option value="@categoria?.Id">@categoria?.nombre</option>
            }
        </select>
        
        <select id="searchEstado" class="border p-2 mr-2">
            <option value="">Todos los estados</option>
            <option value="Nuevo">Nuevo</option>
            <option value="Usado">Usado</option>
        </select> 
        <select id="searchPrecios" class="border p-2 mr-2">
            <option value="">Ordenar por precio </option>
            <option value="Bajo">Mas bajo</option>
            <option value="Alto">Mas alto</option>
        </select>
        
    </div>


    @if (TempData["MensajeDisputa"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["MensajeDisputa"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="contenedor-grid">
        @foreach (var articulo in articulos)
        {

            if (articulo.estado_subasta == "Publicado" )
            {

				//Consulta para encontrar las imágenes del artículo actual
                var imagenesArticulo = imagenes_articulos.Where(m => m.articulo_id == articulo.Id).ToList();



                var carouselId = $"carouselArticulo_{articulo.Id}";
                var articuloCategoria = ca_img.FirstOrDefault(ac => ac.articulo_id == articulo.Id);
                if (articuloCategoria == null) continue;
                var categoria = categorias.FirstOrDefault(c => c.Id == articuloCategoria.categoria_id);

                <div>
                    <div class="card text-decoration-none">
                        <div id="@carouselId" class="carousel slide imgen_p" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @for (int i = 0; i < imagenesArticulo.Count; i++)
                                {
                                    var imag = imagenesArticulo[i];
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@imag.url_imagen"
                                             alt="Imagen del artículo"
                                             onerror="this.onerror=null; this.src='https://res.cloudinary.com/daxbwcgw2/upload/Subasta/default-art.jpg'" />
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev custom-carousel-btn" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                                <span class="custom-arrow bg-black" aria-hidden="true">&#10094;</span>
                            </button>
                            <button class="carousel-control-next custom-carousel-btn" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                                <span class="custom-arrow bg-black" aria-hidden="true">&#10095;</span>
                            </button>
                        </div>
                        <a href="@Url.Action("Details", "Imagenes_articulos", new { id = articulo.Id })">
                            <div class="rounded-lg border border-gray-200 bg-white p-6 shadow-sm dark:border-gray-700 dark:bg-gray-800 item-articulo"
                                 data-estado="@articulo.estado"
                                 data-nombre="@articulo.titulo"
                                 data-categoria="@categoria?.Id"
                                 data-precio="@articulo.precio_venta">
                                <div class="pt-6">
                                    <ul class="mt-2 items-center gap-4">
                                        <li><h1 class="text-sm font-medium">@articulo.titulo</h1></li>
                                        <li><p class="text-sm font-medium text-gray-500">Categoría: @categoria?.nombre</p></li>
                                        <li><p>Fecha de registro: @articulo.fecha_registro</p></li>
                                        <li><p class="text-sm font-medium text-gray-500">@ViewBag.Fecha</p></li>
                                        <li>
                                            <div class="d-flex">
                                                <p class="leading-tight text-precio">Precio de salida: </p>
                                                <p class="font-extrabold leading-tight">$ @articulo.precio_venta</p>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            }
        }


    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.js"></script>
    <script>

        document.getElementById('searchNombre').addEventListener('input', filtrarArticulos);
        document.getElementById('searchCategoria').addEventListener('change', filtrarArticulos);
        document.getElementById('searchEstado').addEventListener('change', filtrarArticulos);
        document.getElementById('searchPrecioMin').addEventListener('input', filtrarArticulos);
        document.getElementById('searchPrecioMax').addEventListener('input', filtrarArticulos);
        document.getElementById('searchPrecios').addEventListener('change', filtrarArticulos);

        function filtrarArticulos() {
            const nombre = document.getElementById('searchNombre').value.toLowerCase();
            const categoria = document.getElementById('searchCategoria').value.toLowerCase();
            const estado = document.getElementById('searchEstado').value.toLowerCase();
            const precioMin = document.getElementById('searchPrecioMin').value !== "" ? parseFloat(document.getElementById('searchPrecioMin').value) : 0;
            const precioMax = document.getElementById('searchPrecioMax').value !== "" ? parseFloat(document.getElementById('searchPrecioMax').value) : Number.MAX_VALUE;
            const ordenPrecios = document.getElementById('searchPrecios').value.toLowerCase();
            const contenedor = document.querySelector('.contenedor-grid');
            const articulos = Array.from(contenedor.children);

            const coincidentes = [];
            const noCoincidentes = [];

            articulos.forEach(wrapper => {
                const articulo = wrapper.querySelector('.item-articulo');
                const articuloNombre = articulo.getAttribute('data-nombre').toLowerCase();
                const articuloCategoria = articulo.getAttribute('data-categoria').toLowerCase();
                const articuloEstado = articulo.getAttribute('data-estado').toLowerCase();
                const precioSalida = parseFloat(articulo.getAttribute('data-precio')) || 0;

                const matchNombre = nombre === '' || articuloNombre.includes(nombre);
                const matchCategoria = categoria === '' || articuloCategoria === categoria;
                const matchEstado = estado === '' || articuloEstado === estado;
                const matchPrecio = precioSalida >= precioMin && precioSalida <= precioMax;

                if (matchNombre && matchCategoria && matchEstado && matchPrecio) {
                    wrapper.style.display = 'block';
                    coincidentes.push({ wrapper, precio: precioSalida });
                } else {
                    wrapper.style.display = 'none';
                    noCoincidentes.push(wrapper);
                }
            });

            // Ordenar por precio si corresponde
            if (ordenPrecios === 'bajo') {
                coincidentes.sort((a, b) => a.precio - b.precio);
            } else if (ordenPrecios === 'alto') {
                coincidentes.sort((a, b) => b.precio - a.precio);
            }

            // Limpiar y reordenar el contenedor
            contenedor.innerHTML = '';
            coincidentes.forEach(el => contenedor.appendChild(el.wrapper));
            noCoincidentes.forEach(el => contenedor.appendChild(el));
        }

    </script>
}



